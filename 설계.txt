


def 함수(self, 부모(cl_no 받음), den) #나중에 올바른 위치에 파일 저장하려면 경로 필요함

부모가 루트면 (cl_no == root_cl_no)
    clusters = [루트 클러스터 번호] -->> root_search() 함수 만들었음


1. 부모가 디렉토리
    clusters = get_clusters(부모.start_cl_no)
            
dentries = gather(clusters) 
dentry_cnt = len(dentries) // 0x20

for i in range(dentry_cnt):
    bf = dentries[0x20*(i-1) : 0x20*i]
    den = Dentry(bf)
    if den.is_valid:
        함수(den.start_cl_no, den)
    return

2. 부모가 파일
clusters = get_clusters(부모.start_cl_no)
fff = gather(clusters) # 흩어진 것들 합치기 
파일 만들기
return

den.is_empty는 어디에 쓰이는가???
필요없는거같은데..

파일이나 디렉토리의 끝 00 00 00 00 ~~~ 를 식별하는 방법은???

block = file[offs:i]
i = pattern 직전
---------------------------------------------------

# dentry shift 연산으로 바꾸기
# 함수가 너무 길다
# 현재 dentry에 child dentry 저장
# 그 다음에 하나씩 꺼내서 디렉토리면 재귀 search()

이미지 파일 끝 식별하기
i-len(pattern) 부터 '\xFF\xD9' 찾기
out 에서 뒤에서부터..

00 ff
01 00


k = i - len(pattern)
                self.file.seek(k)
                line = self.file.read(len(pattern))
                for _ in range(len(pattern)-1):
                    if line[k:k+len(img_end_pattern)] == img_end_pattern:
                        return k+len(img_end_pattern)
                    k += 1













